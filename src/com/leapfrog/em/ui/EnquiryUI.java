/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.leapfrog.em.ui;

import com.leapfrog.em.dao.CourseDAO;
import com.leapfrog.em.dao.EnquiryDAO;
import com.leapfrog.em.daoimpl.CourseDAOImpl;
import com.leapfrog.em.daoimpl.EnquiryDAOImpl;
import com.leapfrog.em.enitity.Courses;
import com.leapfrog.em.enitity.Enquiries;
import java.sql.SQLException;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListDataListener;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author Lenovo
 */
public class EnquiryUI extends javax.swing.JFrame {
    private CourseDAO courseDAO=new CourseDAOImpl();
    private EnquiryDAO enquiryDAO=new EnquiryDAOImpl();
    /**
     * Creates new form EnquiryUI
     */
    public EnquiryUI()  {
        initComponents();
        try{
        cmbCourse.setModel(new CourseComboModel(courseDAO.getAll()));
       
        }
        catch(ClassNotFoundException|SQLException ex){
            System.out.println(ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbCourse = new javax.swing.JComboBox();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEnquiries = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cmbCourse.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonClick(evt);
            }
        });

        tblEnquiries.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblEnquiries);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(cmbCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(btnSearch)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonClick
        Courses course=(Courses)cmbCourse.getSelectedItem();
        String[] columns={"Id" ,"Name","Email","ContactNo","message"};
        //JOptionPane.showMessageDialog(null, course.getDescription());
        try{
         tblEnquiries.setModel(new EnquiryTableModel(columns,enquiryDAO.getByCourseId(course.getId())));
        }
        catch(ClassNotFoundException|SQLException ex){
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_searchButtonClick

    private class CourseComboModel implements ComboBoxModel<Courses>{
         private List<Courses> courseList;
        private Courses course;
        
        public CourseComboModel(List<Courses> courseList){
            this.courseList=courseList;
            
        }
        

        @Override
        public void setSelectedItem(Object anItem) {
            course=(Courses)anItem;
        }

        @Override
        public Object getSelectedItem() {
            return course;
        }

        @Override
        public int getSize() {
            return courseList.size();
        }

        @Override
        public Courses getElementAt(int index) {
            return courseList.get(index);
        }

        @Override
        public void addListDataListener(ListDataListener l) {
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void removeListDataListener(ListDataListener l) {
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
        
    }
    private  class EnquiryTableModel extends AbstractTableModel{
        List<Enquiries> enquiryList;
        String[] columns;

        public EnquiryTableModel(String columns[],List<Enquiries> enquiryList) {
            this.columns=columns;
            this.enquiryList=enquiryList;
            
        }
        
       

        @Override
        public int getRowCount() {
            return enquiryList.size();
        }

        @Override
        public int getColumnCount() {
            return columns.length;
            
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Enquiries enquiry=enquiryList.get(rowIndex);
            switch(columnIndex){
                case 0:
                    return enquiry.getId();
                case 1:
                    return enquiry.getFirstName()+" "+ enquiry.getLastName();
                case 2:
                    return enquiry.getEmail();
                case 3:
                    return enquiry.getContact();
                case 4:
                    return enquiry.getMessage();
                    
                    
                    
            }
            return null;
        }
         
    }
  
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox cmbCourse;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblEnquiries;
    // End of variables declaration//GEN-END:variables
}

